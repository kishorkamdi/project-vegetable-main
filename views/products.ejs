<%- include('partials/header') %>

<div class="product-container">

  <!-- Message container for add to cart feedback -->
  <div id="add-to-cart-message" class="alert" style="display:none; position: fixed; top: 70px; right: 20px; z-index: 1050; min-width: 250px;"></div>

<h1 class="text-center mb-4"><%= pageTitle %></h1>

<% if (searchTerm) { %>
    <p class="lead">Showing results for: <strong>"<%= searchTerm %>"</strong>. <a href="/products">Clear Search</a></p>
<% } %>

<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4"> <!-- Responsive grid -->
    <% if (products && products.length > 0) { %>
        <% products.forEach(product => { %>
            <div class="col">
                <div class="card product-card h-100 shadow-sm">
                    <img src="<%= product.image || '/images/placeholder.png' %>" class="card-img-top" alt="<%= product.name %>">
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title"><%= product.name %></h5>
                        <p class="card-text flex-grow-1"><%= product.description %></p>
                        <p class="card-text"><strong>Price <%= product.price.toFixed(2) %></strong></p>
                        <form action="/cart/add" method="POST" class="mt-auto add-to-cart-form">
                            <input type="hidden" name="productId" value="<%= product.id %>">
                            <div class="input-group input-group-sm mb-2">
                                <span class="input-group-text">Qty</span>
                                <input type="number" name="quantity" value="1" min="1" class="form-control" style="max-width: 70px;" aria-label="Quantity">
                            </div>
                            <button type="submit" class="btn btn-sm btn-success w-100 rounded-pill">Add to Cart</button>
                        </form>
                    </div>
                </div>
            </div>
        <% }); %>
    <% } else { %>
        <div class="col-12"> <!-- Take full width if no results -->
            <div class="alert alert-info" role="alert">
                No products found matching your criteria. Try broadening your search or <a href="/products" class="alert-link">view all products</a>.
            </div>
        </div>
    <% } %>
</div>
</div>

<script>
  // Restore scroll position on page load
  document.addEventListener('DOMContentLoaded', () => {
    const scrollPos = sessionStorage.getItem('productPageScrollPos');
    if (scrollPos) {
      window.scrollTo(0, parseInt(scrollPos));
      sessionStorage.removeItem('productPageScrollPos');
    }

    // Intercept add to cart form submissions to prevent page reload
    document.querySelectorAll('.add-to-cart-form').forEach(form => {
      form.addEventListener('submit', async (event) => {
        event.preventDefault();

        // Save scroll position
        sessionStorage.setItem('productPageScrollPos', window.scrollY);

        const formData = new FormData(form);
        try {
          const formParams = new URLSearchParams();
          for (const pair of formData) {
            formParams.append(pair[0], pair[1]);
          }
          const response = await fetch(form.action, {
            method: 'POST',
            body: formParams.toString(),
            headers: {
              'X-Requested-With': 'XMLHttpRequest',
              'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'
            },
            credentials: 'same-origin'
          });

          const result = await response.json();

          if (result.success) {
            // Show success message dynamically
            const messageDiv = document.getElementById('add-to-cart-message');
            messageDiv.textContent = result.message;
            messageDiv.className = 'alert alert-success';
            messageDiv.style.display = 'block';
            setTimeout(() => { messageDiv.style.display = 'none'; }, 3000);

            // Update cart item count badge in nav
            const cartBadge = document.querySelector('.nav-link.position-relative .badge');
            if (cartBadge) {
              cartBadge.textContent = result.cartItemCount;
              if (result.cartItemCount > 0) {
                cartBadge.style.display = 'inline-block';
              } else {
                cartBadge.style.display = 'none';
              }
            }
          } else {
            const messageDiv = document.getElementById('add-to-cart-message');
            messageDiv.textContent = 'Error: ' + (result.message || 'Failed to add to cart.');
            messageDiv.className = 'alert alert-danger';
            messageDiv.style.display = 'block';
            setTimeout(() => { messageDiv.style.display = 'none'; }, 3000);
          }
        } catch (error) {
          alert('Error: Could not add to cart. Please try again.');
          console.error('Add to cart error:', error);
        }
      });
    });
  });
</script>

<%- include('partials/footer') %>
