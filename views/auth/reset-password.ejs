
<%- include('../partials/header') %>

<div class="auth-form-container">
    <h1><%= pageTitle %></h1>
    <p class="text-center text-muted mb-4">Enter and confirm your new password below.</p>

    <form action="/auth/reset-password/<%= token %>" method="POST" class="needs-validation" novalidate>
        <input type="hidden" name="token" value="<%= token %>"> <!-- Optional, token is in URL but good practice -->
        <div class="mb-3">
            <label for="password" class="form-label">New Password (min 6 characters)</label>
            <input type="password" class="form-control" id="password" name="password" required minlength="6" autocomplete="new-password">
             <div class="invalid-feedback">
                Password must be at least 6 characters long.
            </div>
        </div>
        <div class="mb-3">
            <label for="confirmPassword" class="form-label">Confirm New Password</label>
            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required minlength="6" autocomplete="new-password">
             <div class="invalid-feedback">
                Please confirm your new password. Passwords must match.
            </div>
        </div>
        <button type="submit" class="btn btn-primary w-100">Reset Password</button>
    </form>
</div>

<%- include('../partials/footer') %>

 <script>
  // Basic Bootstrap validation script
  (function () {
    'use strict'
    var forms = document.querySelectorAll('.needs-validation')
    Array.prototype.slice.call(forms)
      .forEach(function (form) {
        form.addEventListener('submit', function (event) {
          // Add custom validation for password match
          const password = form.querySelector('#password');
          const confirmPassword = form.querySelector('#confirmPassword');
          if (password && confirmPassword && password.value !== confirmPassword.value) {
              confirmPassword.setCustomValidity("Passwords do not match");
          } else if (confirmPassword) {
              confirmPassword.setCustomValidity(""); // Clear custom validity
          }

          if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
          }
          form.classList.add('was-validated')
        }, false)
      })
  })()
</script>


